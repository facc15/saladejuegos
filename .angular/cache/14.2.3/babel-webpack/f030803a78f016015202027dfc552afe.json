{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(afs, afAuth) {\n      this.afs = afs;\n      this.afAuth = afAuth;\n      this.mensajes = [];\n      this.usuario = {};\n      this.afAuth.authState.subscribe(user => {\n        if (!user) {\n          return;\n        }\n\n        this.usuario.nombre = user.displayName;\n        this.usuario.uid = user.uid;\n\n        if (user.displayName == null) {\n          this.usuario.nombre = user.email;\n        }\n      });\n    }\n\n    cargarMensajes() {\n      //le hago una query a firebase por fecha y me traigo los ultimos.\n      this.itemsCollections = this.afs.collection('Mensajes', ref => ref.orderBy('fecha', 'desc') //le doy un limite que me traiga 5.\n      .limit(8));\n      return this.itemsCollections.valueChanges().pipe(map(mensajes => {\n        this.mensajes = [];\n        console.log(mensajes);\n\n        for (let mensaje of mensajes) {\n          //insertar en la primer posición siempre.\n          this.mensajes.unshift(mensaje);\n        }\n\n        return this.mensajes;\n      }));\n    }\n\n    agregarMensaje(texto) {\n      let mensaje = {\n        nombre: this.usuario.nombre,\n        mensaje: texto,\n        uid: this.usuario.uid,\n        fecha: new Date().getTime()\n      };\n      return this.itemsCollections.add(mensaje);\n    }\n\n  }\n\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}