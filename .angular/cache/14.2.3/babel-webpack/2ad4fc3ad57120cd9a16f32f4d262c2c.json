{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Facundo/Desktop/Angular/TP/saladejuegos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { addDoc, collection } from 'firebase/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport class ResultadosService {\n  constructor(afs, afAuth) {\n    this.afs = afs;\n    this.afAuth = afAuth;\n    this.afAuth.authState.subscribe(user => {\n      if (!user) {\n        return;\n      }\n\n      this.usuario.nombre = user.displayName;\n      this.usuario.uid = user.uid;\n\n      if (user.displayName == null) {\n        this.usuario.nombre = user.email;\n      }\n    });\n  }\n\n  miUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.user = yield _this.auth.getUserLog().then(res => console.log(res));\n    })();\n  }\n\n  guardarResultadoAhorcado(puntaje) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const docRef = yield addDoc(collection(_this2.afs.firestore, \"Resultados/ahorcado\"), {\n          puntaje: puntaje,\n          correo: _this2.user,\n          fecha: new Date()\n        });\n        console.log(\"Documento escrito en colección: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error al agregar document: \", e);\n      }\n    })();\n  }\n\n}\n\nResultadosService.ɵfac = function ResultadosService_Factory(t) {\n  return new (t || ResultadosService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n};\n\nResultadosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResultadosService,\n  factory: ResultadosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAIA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;;;;AAMA,OAAM,MAAOC,iBAAP,CAAwB;EAG5BC,YAAoBC,GAApB,EAAkDC,MAAlD,EAAyE;IAArD;IAA8B;IAChD,KAAKA,MAAL,CAAYC,SAAZ,CAAsBC,SAAtB,CAAgCC,IAAI,IAAE;MACpC,IAAG,CAACA,IAAJ,EACA;QACE;MACD;;MACD,KAAKC,OAAL,CAAaC,MAAb,GAAqBF,IAAI,CAACG,WAA1B;MAEA,KAAKF,OAAL,CAAaG,GAAb,GAAkBJ,IAAI,CAACI,GAAvB;;MACA,IAAGJ,IAAI,CAACG,WAAL,IAAkB,IAArB,EACA;QACE,KAAKF,OAAL,CAAaC,MAAb,GAAqBF,IAAI,CAACK,KAA1B;MACD;IACA,CAZH;EAcA;;EAEEC,MAAM;IAAA;;IAAA;MACV,KAAI,CAACN,IAAL,SAAgB,KAAI,CAACO,IAAL,CAAUC,UAAV,GAAuBC,IAAvB,CAA6BC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAnC,CAAhB;IADU;EAEX;;EAGOG,wBAAwB,CAACC,OAAD,EAAgB;IAAA;;IAAA;MAE5C,IAAI;QACF,MAAMC,MAAM,SAASvB,MAAM,CAACC,UAAU,CAAC,MAAI,CAACG,GAAL,CAASoB,SAAV,EAAoB,qBAApB,CAAX,EAAuD;UAChFF,OAAO,EAAEA,OADuE;UAEhFG,MAAM,EAAE,MAAI,CAACjB,IAFmE;UAGhFkB,KAAK,EAAE,IAAIC,IAAJ;QAHyE,CAAvD,CAA3B;QAKAR,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDG,MAAM,CAACK,EAAvD;MAED,CARD,CAQE,OAAOC,CAAP,EAAU;QACVV,OAAO,CAACW,KAAR,CAAc,6BAAd,EAA6CD,CAA7C;MAED;IAb2C;EAc7C;;AAvC2B;;;mBAAjB3B,mBAAiB6B;AAAA;;;SAAjB7B;EAAiB8B,SAAjB9B,iBAAiB;EAAA+B,YAFhB","names":["addDoc","collection","ResultadosService","constructor","afs","afAuth","authState","subscribe","user","usuario","nombre","displayName","uid","email","miUser","auth","getUserLog","then","res","console","log","guardarResultadoAhorcado","puntaje","docRef","firestore","correo","fecha","Date","id","e","error","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Facundo\\Desktop\\Angular\\TP\\saladejuegos\\src\\app\\servicios\\resultados.service.ts"],"sourcesContent":["import { AuthService } from 'src/app/servicios/auth.service';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Firestore } from '@angular/fire/firestore';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultadosService {\n  private user: any;\n\n  constructor(private afs: AngularFirestore,private afAuth: AngularFireAuth) {\n    this.afAuth.authState.subscribe(user=>{\n      if(!user)\n      {\n        return ;\n      }\n      this.usuario.nombre= user.displayName;\n\n      this.usuario.uid= user.uid;\n      if(user.displayName==null)\n      {\n        this.usuario.nombre= user.email;\n      }\n      });\n\n   }\n\nasync miUser(){\n  this.user=await this.auth.getUserLog().then((res)=>console.log(res));\n}\n\n\n  async guardarResultadoAhorcado(puntaje: number)\n  {\n    try {\n      const docRef = await addDoc(collection(this.afs.firestore,\"Resultados/ahorcado\"), {\n        puntaje: puntaje,\n        correo: this.user ,\n        fecha: new Date(),\n      });\n      console.log(\"Documento escrito en colección: \", docRef.id);\n\n    } catch (e) {\n      console.error(\"Error al agregar document: \", e);\n\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}