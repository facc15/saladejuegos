{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Facundo/Desktop/Angular/TP/saladejuegos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { first } from 'rxjs/operators'; //firestore\n\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { collectionData } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/fire/compat/auth\";\nimport * as i4 from \"ngx-toastr\";\nexport class AuthService {\n  constructor(router, afs, afAuth, toastr) {\n    this.router = router;\n    this.afs = afs;\n    this.afAuth = afAuth;\n    this.toastr = toastr;\n    this.miUser = {};\n    this.afAuth.authState.subscribe(u => {\n      console.log(\"estado:\", u);\n\n      if (!u) {\n        return;\n      }\n\n      this.miUser.name = u?.displayName;\n      this.miUser.id = u?.uid;\n      this.miUser.email = u?.email;\n    });\n  }\n\n  loguearGoogle() {\n    this.afAuth.signInWithPopup(new GoogleAuthProvider()).then(algo => {\n      console.log(\"Se logueo bien con google\");\n      console.log(algo);\n      this.router.navigateByUrl('home');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  loguear(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const resultado = yield _this.afAuth.signInWithEmailAndPassword(email, password).then(user => {\n        _this.toastr.success('El usuario se logueó satistactoriamente', 'Exito', {\n          timeOut: 1500,\n          progressAnimation: 'increasing',\n          positionClass: 'toast-top-center'\n        });\n\n        console.log(user);\n      }).catch(error => {\n        console.log(error);\n\n        _this.toastr.error(_this.firebaseError(error.code), 'Error', {\n          timeOut: 1500,\n          progressAnimation: 'decreasing',\n          positionClass: 'toast-bottom-center'\n        });\n      });\n      return resultado;\n    })();\n  }\n\n  registrar(usuario) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const resultado = yield _this2.afAuth.createUserWithEmailAndPassword(usuario.correo, usuario.pass).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (user) {\n            console.log(\"user: \" + user);\n            usuario.uid = user.user?.uid;\n            const coleccion = yield _this2.guardarColeccion(usuario);\n\n            _this2.toastr.success('El usuario se registró satistactoriamente', 'Exito', {\n              timeOut: 1000,\n              progressAnimation: 'increasing',\n              positionClass: 'toast-top-center'\n            });\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(error => {\n          console.log(error);\n\n          _this2.toastr.error(_this2.firebaseError(error.code), 'Error', {\n            timeOut: 2000,\n            progressAnimation: 'decreasing',\n            positionClass: 'toast-bottom-center'\n          });\n        });\n        return resultado;\n      } catch (error) {\n        return \"error\";\n      }\n\n      return \"\";\n    })();\n  }\n\n  guardarColeccion(usuario) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const docRef = yield addDoc(collection(_this3.afs.firestore, \"Usuarios\"), {\n          uid: usuario.uid,\n          correo: usuario.correo,\n          pass: usuario.pass,\n          fecha: new Date(),\n          perfil: usuario.perfil\n        });\n        console.log(\"Documento escrito en colección: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error al agregar document: \", e);\n      }\n    })();\n  }\n\n  traerUsuarios() {\n    let placeRef = collection(this.afs.firestore, \"Usuarios\");\n    return collectionData(placeRef, {\n      idField: 'id'\n    });\n  }\n\n  traerAdmin() {}\n\n  firebaseError(code) {\n    switch (code) {\n      case 'auth/email-already-in-use':\n        return 'El usuario ya se encuentra registrado';\n\n      case 'auth/weak-password':\n        return 'La contraseña debe ser mínimo de 6 caracteres';\n\n      case 'auth/invalid-email':\n        return 'El correo es inválido';\n\n      case 'auth/wrong-password':\n        return 'La contraseña es incorrecta';\n\n      case 'auth/user-not-found':\n        return 'El usuario no se encuentra registado';\n\n      default:\n        return 'Error desconocido';\n    }\n  }\n\n  desloguear() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this4.miUser = {};\n        yield _this4.afAuth.signOut();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n  getUserLog() {\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i4.ToastrService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["GoogleAuthProvider","first","collection","addDoc","collectionData","AuthService","constructor","router","afs","afAuth","toastr","authState","subscribe","u","console","log","miUser","name","displayName","id","uid","email","loguearGoogle","signInWithPopup","then","algo","navigateByUrl","catch","error","loguear","password","resultado","signInWithEmailAndPassword","user","success","timeOut","progressAnimation","positionClass","firebaseError","code","registrar","usuario","createUserWithEmailAndPassword","correo","pass","coleccion","guardarColeccion","docRef","firestore","fecha","Date","perfil","e","traerUsuarios","placeRef","idField","traerAdmin","desloguear","signOut","getUserLog","pipe","toPromise","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Facundo\\Desktop\\Angular\\TP\\saladejuegos\\src\\app\\servicios\\auth.service.ts"],"sourcesContent":["import { Usuario } from 'src/app/clases/usuario';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore} from '@angular/fire/compat/firestore';\nimport * as firebase from 'firebase/app';\nimport { getAuth, getIdToken, onAuthStateChanged, User, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { first } from 'rxjs/operators';\n//firestore\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { collectionData } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  public miUser :any={};\n  public token !: string;\n\n  constructor(private router: Router,private afs:AngularFirestore, public afAuth: AngularFireAuth, private toastr: ToastrService) {\n\n    this.afAuth.authState.subscribe(u=>{\n      console.log(\"estado:\" ,u);\n\n\n\n      if(!u)\n      {\n        return;\n      }\n\n      this.miUser.name=u?.displayName;\n      this.miUser.id=u?.uid;\n      this.miUser.email= u?.email;\n    })\n  }\n\n\n\n  loguearGoogle()\n  {\n    this.afAuth.signInWithPopup(new GoogleAuthProvider).then((algo)=>{\n    console.log(\"Se logueo bien con google\");\n    console.log(algo);\n    this.router.navigateByUrl('home');\n    }).catch((error)=>{console.log(error)});\n  }\n\n\n\n  async loguear(email:string, password:string){\n\n    const resultado= await this.afAuth.signInWithEmailAndPassword(email,password).then((user)=>{\n\n      this.toastr.success('El usuario se logueó satistactoriamente', 'Exito',{\n        timeOut: 1500,\n        progressAnimation: 'increasing',\n        positionClass: 'toast-top-center'\n        });\n      console.log(user);\n    }).catch((error)=>{console.log(error)\n      this.toastr.error(this.firebaseError(error.code),'Error',{\n        timeOut: 1500,\n        progressAnimation: 'decreasing',\n        positionClass: 'toast-bottom-center'\n      });});\n\n    return resultado;\n\n}\n\n\n  async registrar(usuario: Usuario){\n\n    try{\n\n      const resultado= await this.afAuth.createUserWithEmailAndPassword(usuario.correo,usuario.pass).then(async (user)=>{\n        console.log(\"user: \"+user);\n        usuario.uid= user.user?.uid;\n        const coleccion=await this.guardarColeccion(usuario);\n        this.toastr.success('El usuario se registró satistactoriamente', 'Exito',{\n          timeOut: 1000,\n          progressAnimation: 'increasing',\n          positionClass: 'toast-top-center'\n          });\n      }).catch((error)=>{console.log(error)\n      this.toastr.error(this.firebaseError(error.code),'Error',{\n        timeOut: 2000,\n        progressAnimation: 'decreasing',\n        positionClass: 'toast-bottom-center'\n      });\n\n      });\n\n    return resultado;\n\n    }catch(error){\n      return \"error\";\n    }\n    return \"\";\n  }\n\n  async guardarColeccion(usuario: Usuario)\n  {\n    try {\n      const docRef = await addDoc(collection(this.afs.firestore,\"Usuarios\"), {\n        uid: usuario.uid,\n        correo: usuario.correo,\n        pass: usuario.pass,\n        fecha: new Date(),\n        perfil: usuario.perfil,\n      });\n      console.log(\"Documento escrito en colección: \", docRef.id);\n\n    } catch (e) {\n      console.error(\"Error al agregar document: \", e);\n\n    }\n  }\n\n\n  traerUsuarios(): Observable<Usuario[]>\n  {\n    let placeRef=collection(this.afs.firestore,\"Usuarios\");\n    return collectionData(placeRef,{idField:'id'}) as Observable<Usuario[]>;\n\n  }\n\n  traerAdmin()\n  {\n\n\n  }\n\n\n  firebaseError(code: string)\n  {\n    switch(code)\n    {\n        case 'auth/email-already-in-use':\n          return 'El usuario ya se encuentra registrado';\n        case 'auth/weak-password':\n          return 'La contraseña debe ser mínimo de 6 caracteres';\n        case 'auth/invalid-email':\n          return 'El correo es inválido';\n        case 'auth/wrong-password':\n        return 'La contraseña es incorrecta';\n        case 'auth/user-not-found':\n          return 'El usuario no se encuentra registado';\n        default:\n          return 'Error desconocido';\n\n    }\n\n  }\n\n\n  async desloguear(){\n    try{\n      this.miUser={};\n      await this.afAuth.signOut();\n    }catch(error){\n          console.log(error);\n          }\n\n  }\n\n\n\n  getUserLog(){\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}