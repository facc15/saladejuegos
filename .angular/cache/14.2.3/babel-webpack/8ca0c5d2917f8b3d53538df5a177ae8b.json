{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Facundo/Desktop/Angular/TP/saladejuegos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { first } from 'rxjs/operators'; //firestore\n\nimport { collection, addDoc } from \"firebase/firestore\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/fire/compat/auth\";\nimport * as i4 from \"ngx-toastr\";\nexport class AuthService {\n  constructor(router, afs, afAuth, toastr) {\n    this.router = router;\n    this.afs = afs;\n    this.afAuth = afAuth;\n    this.toastr = toastr;\n    this.miUser = {};\n    this.afAuth.authState.subscribe(u => {\n      console.log(\"estado:\", u);\n\n      if (!u) {\n        return;\n      }\n\n      this.miUser.name = u?.displayName;\n      this.miUser.id = u?.uid;\n      this.miUser.email = u?.email;\n    });\n  }\n\n  guardarColeccion(correo, pass) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const docRef = yield addDoc(collection(_this.afs.firestore, \"Usuarios\"), {\n          correo: correo,\n          pass: pass,\n          fecha: new Date()\n        });\n        console.log(\"Documento escrito en colección: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error al agregar document: \", e);\n      }\n    })();\n  }\n\n  loguearGoogle() {\n    this.afAuth.signInWithPopup(new GoogleAuthProvider()).then(() => {\n      console.log(\"Se logueo bien con google\");\n      this.router.navigateByUrl('home');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  loguear(email, password) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const resultado = yield _this2.afAuth.signInWithEmailAndPassword(email, password).then(user => {\n        _this2.toastr.success('El usuario se logueó satistactoriamente', 'Exito', {\n          timeOut: 1500,\n          progressAnimation: 'increasing',\n          positionClass: 'toast-top-center'\n        });\n\n        console.log(user);\n      }).catch(error => {\n        console.log(error);\n\n        _this2.toastr.error(_this2.firebaseError(error.code), 'Error', {\n          timeOut: 1500,\n          progressAnimation: 'decreasing',\n          positionClass: 'toast-bottom-center'\n        });\n      });\n      return resultado;\n    })();\n  }\n\n  registrar(email, password) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const resultado = yield _this3.afAuth.createUserWithEmailAndPassword(email, password).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (user) {\n            console.log(\"user: \" + user);\n            const coleccion = yield _this3.guardarColeccion(email, password);\n\n            _this3.toastr.success('El usuario se registró satistactoriamente', 'Exito', {\n              timeOut: 1000,\n              progressAnimation: 'increasing',\n              positionClass: 'toast-top-center'\n            });\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(error => {\n          console.log(error);\n\n          _this3.toastr.error(_this3.firebaseError(error.code), 'Error', {\n            timeOut: 2000,\n            progressAnimation: 'decreasing',\n            positionClass: 'toast-bottom-center'\n          });\n        });\n        return resultado;\n      } catch (error) {\n        return \"error\";\n      }\n\n      return \"\";\n    })();\n  }\n\n  firebaseError(code) {\n    switch (code) {\n      case 'auth/email-already-in-use':\n        return 'El usuario ya se encuentra registrado';\n\n      case 'auth/weak-password':\n        return 'La contraseña debe ser mínimo de 6 caracteres';\n\n      case 'auth/invalid-email':\n        return 'El correo es inválido';\n\n      case 'auth/wrong-password':\n        return 'La contraseña es incorrecta';\n\n      case 'auth/user-not-found':\n        return 'El usuario no se encuentra registado';\n\n      default:\n        return 'Error desconocido';\n    }\n  }\n\n  desloguear() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this4.miUser = {};\n        yield _this4.afAuth.signOut();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n  getUserLog() {\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i4.ToastrService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["GoogleAuthProvider","first","collection","addDoc","AuthService","constructor","router","afs","afAuth","toastr","authState","subscribe","u","console","log","miUser","name","displayName","id","uid","email","guardarColeccion","correo","pass","docRef","firestore","fecha","Date","e","error","loguearGoogle","signInWithPopup","then","navigateByUrl","catch","loguear","password","resultado","signInWithEmailAndPassword","user","success","timeOut","progressAnimation","positionClass","firebaseError","code","registrar","createUserWithEmailAndPassword","coleccion","desloguear","signOut","getUserLog","pipe","toPromise","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Facundo\\Desktop\\Angular\\TP\\saladejuegos\\src\\app\\servicios\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore} from '@angular/fire/compat/firestore';\nimport * as firebase from 'firebase/app';\nimport { getAuth, getIdToken, onAuthStateChanged, User, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { first } from 'rxjs/operators';\n//firestore\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  public miUser :any={};\n  public token !: string;\n\n  constructor(private router: Router,private afs:AngularFirestore, public afAuth: AngularFireAuth, private toastr: ToastrService) {\n\n    this.afAuth.authState.subscribe(u=>{\n      console.log(\"estado:\" ,u);\n\n\n\n      if(!u)\n      {\n        return;\n      }\n\n      this.miUser.name=u?.displayName;\n      this.miUser.id=u?.uid;\n      this.miUser.email= u?.email;\n    })\n  }\n\n  async guardarColeccion(correo: string, pass: string)\n  {\n    try {\n      const docRef = await addDoc(collection(this.afs.firestore,\"Usuarios\"), {\n        correo: correo,\n        pass: pass,\n        fecha: new Date(),\n      });\n      console.log(\"Documento escrito en colección: \", docRef.id);\n\n    } catch (e) {\n      console.error(\"Error al agregar document: \", e);\n\n    }\n  }\n\n  loguearGoogle()\n  {\n    this.afAuth.signInWithPopup(new GoogleAuthProvider).then(()=>{\n    console.log(\"Se logueo bien con google\");\n    this.router.navigateByUrl('home');\n    }).catch((error)=>{console.log(error)});\n  }\n\n\n\n  async loguear(email:string, password:string){\n\n    const resultado= await this.afAuth.signInWithEmailAndPassword(email,password).then((user)=>{\n\n      this.toastr.success('El usuario se logueó satistactoriamente', 'Exito',{\n        timeOut: 1500,\n        progressAnimation: 'increasing',\n        positionClass: 'toast-top-center'\n        });\n      console.log(user);\n    }).catch((error)=>{console.log(error)\n      this.toastr.error(this.firebaseError(error.code),'Error',{\n        timeOut: 1500,\n        progressAnimation: 'decreasing',\n        positionClass: 'toast-bottom-center'\n      });});\n\n    return resultado;\n\n}\n\n\n  async registrar(email:string, password:string){\n\n    try{\n\n      const resultado= await this.afAuth.createUserWithEmailAndPassword(email,password).then(async (user)=>{\n        console.log(\"user: \"+user);\n        const coleccion=await this.guardarColeccion(email,password);\n        this.toastr.success('El usuario se registró satistactoriamente', 'Exito',{\n          timeOut: 1000,\n          progressAnimation: 'increasing',\n          positionClass: 'toast-top-center'\n          });\n      }).catch((error)=>{console.log(error)\n      this.toastr.error(this.firebaseError(error.code),'Error',{\n        timeOut: 2000,\n        progressAnimation: 'decreasing',\n        positionClass: 'toast-bottom-center'\n      });\n\n      });\n\n    return resultado;\n\n    }catch(error){\n      return \"error\";\n    }\n    return \"\";\n  }\n\n\n  firebaseError(code: string)\n  {\n    switch(code)\n    {\n        case 'auth/email-already-in-use':\n          return 'El usuario ya se encuentra registrado';\n        case 'auth/weak-password':\n          return 'La contraseña debe ser mínimo de 6 caracteres';\n        case 'auth/invalid-email':\n          return 'El correo es inválido';\n        case 'auth/wrong-password':\n        return 'La contraseña es incorrecta';\n        case 'auth/user-not-found':\n          return 'El usuario no se encuentra registado';\n        default:\n          return 'Error desconocido';\n\n    }\n\n  }\n\n\n  async desloguear(){\n    try{\n      this.miUser={};\n      await this.afAuth.signOut();\n    }catch(error){\n          console.log(error);\n          }\n\n  }\n\n  getUserLog(){\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}