{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Facundo/Desktop/Angular/TP/saladejuegos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collectionData } from '@angular/fire/firestore';\nimport { addDoc, collection } from 'firebase/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport class EncuestaService {\n  constructor(afs, afAuth) {\n    this.afs = afs;\n    this.afAuth = afAuth;\n    this.user = {};\n    this.afAuth.authState.subscribe(user => {\n      if (!user) {\n        return;\n      }\n\n      this.user.displayName = user.displayName;\n      this.user.email = user.email;\n      this.user.photoUrl = user.photoURL;\n      this.user.uid = user.uid;\n    });\n  }\n\n  guardarEncuesta(encuestado) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const docRef = yield addDoc(collection(_this.afs.firestore, 'Encuesta'), {\n          correo: _this.user.email,\n          nombreDisplay: _this.user.displayName,\n          nombre: encuestado.nombre,\n          apellido: encuestado.apellido,\n          edad: encuestado.edad,\n          numero: encuestado.numero,\n          pregunta1: encuestado.pregunta1,\n          pregunta2: encuestado.pregunta2,\n          pregunta3: encuestado.pregunta3,\n          uid: _this.user.uid,\n          fecha: new Date()\n        });\n        console.log(\"Documento escrito en colección: \", docRef.id);\n        _this.user.id = docRef.id;\n      } catch (e) {\n        console.error(\"Error al agregar document: \", e);\n      }\n    })();\n  }\n\n  traerEncuesta() {\n    let placeRef = collection(this.afs.firestore, \"Encuesta\");\n    return collectionData(placeRef, {\n      idField: 'id'\n    });\n  }\n\n}\n\nEncuestaService.ɵfac = function EncuestaService_Factory(t) {\n  return new (t || EncuestaService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n};\n\nEncuestaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EncuestaService,\n  factory: EncuestaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,cAAT,QAA+B,yBAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;;;;AAOA,OAAM,MAAOC,eAAP,CAAsB;EAG1BC,YAAoBC,GAApB,EAAkDC,MAAlD,EAAyE;IAArD;IAA8B;IAF1C,YAAU,EAAV;IAGN,KAAKA,MAAL,CAAYC,SAAZ,CAAsBC,SAAtB,CAAgCC,IAAI,IAAE;MACpC,IAAG,CAACA,IAAJ,EACA;QACE;MACD;;MAEC,KAAKA,IAAL,CAAUC,WAAV,GAAuBD,IAAI,CAACC,WAA5B;MACA,KAAKD,IAAL,CAAUE,KAAV,GAAiBF,IAAI,CAACE,KAAtB;MACA,KAAKF,IAAL,CAAUG,QAAV,GAAoBH,IAAI,CAACI,QAAzB;MACA,KAAKJ,IAAL,CAAUK,GAAV,GAAeL,IAAI,CAACK,GAApB;IAED,CAXH;EAaA;;EAEIC,eAAe,CAACC,UAAD,EAAgB;IAAA;;IAAA;MAEnC,IAAI;QACF,MAAMC,MAAM,SAAShB,MAAM,CAACC,UAAU,CAAC,KAAI,CAACG,GAAL,CAASa,SAAV,EAAoB,UAApB,CAAX,EAA4C;UACrEC,MAAM,EAAE,KAAI,CAACV,IAAL,CAAUE,KADmD;UAErES,aAAa,EAAE,KAAI,CAACX,IAAL,CAAUC,WAF4C;UAGrEW,MAAM,EAAEL,UAAU,CAACK,MAHkD;UAIrEC,QAAQ,EAACN,UAAU,CAACM,QAJiD;UAKrEC,IAAI,EAAEP,UAAU,CAACO,IALoD;UAMrEC,MAAM,EAACR,UAAU,CAACQ,MANmD;UAOrEC,SAAS,EAACT,UAAU,CAACS,SAPgD;UAQrEC,SAAS,EAACV,UAAU,CAACU,SARgD;UASrEC,SAAS,EAACX,UAAU,CAACW,SATgD;UAUrEb,GAAG,EAAE,KAAI,CAACL,IAAL,CAAUK,GAVsD;UAWrEc,KAAK,EAAE,IAAIC,IAAJ;QAX8D,CAA5C,CAA3B;QAaAC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDd,MAAM,CAACe,EAAvD;QACA,KAAI,CAACvB,IAAL,CAAUuB,EAAV,GAAaf,MAAM,CAACe,EAApB;MACD,CAhBD,CAgBE,OAAOC,CAAP,EAAU;QACVH,OAAO,CAACI,KAAR,CAAc,6BAAd,EAA6CD,CAA7C;MAED;IArBkC;EAsBpC;;EAEDE,aAAa;IAEX,IAAIC,QAAQ,GAAClC,UAAU,CAAC,KAAKG,GAAL,CAASa,SAAV,EAAoB,UAApB,CAAvB;IACA,OAAOlB,cAAc,CAACoC,QAAD,EAAU;MAACC,OAAO,EAAC;IAAT,CAAV,CAArB;EAED;;AAhDyB;;;mBAAflC,iBAAemC;AAAA;;;SAAfnC;EAAeoC,SAAfpC,eAAe;EAAAqC,YAFd","names":["collectionData","addDoc","collection","EncuestaService","constructor","afs","afAuth","authState","subscribe","user","displayName","email","photoUrl","photoURL","uid","guardarEncuesta","encuestado","docRef","firestore","correo","nombreDisplay","nombre","apellido","edad","numero","pregunta1","pregunta2","pregunta3","fecha","Date","console","log","id","e","error","traerEncuesta","placeRef","idField","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Facundo\\Desktop\\Angular\\TP\\saladejuegos\\src\\app\\servicios\\encuesta.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { collectionData } from '@angular/fire/firestore';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { Observable } from 'rxjs';\nimport { Encuestado } from '../interfaces/encuestado';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncuestaService {\n  private user: any={};\n\n  constructor(private afs: AngularFirestore,private afAuth: AngularFireAuth) {\n    this.afAuth.authState.subscribe(user=>{\n      if(!user)\n      {\n        return ;\n      }\n\n        this.user.displayName= user.displayName;\n        this.user.email= user.email;\n        this.user.photoUrl= user.photoURL;\n        this.user.uid= user.uid;\n\n      });\n\n   }\n\n  async guardarEncuesta(encuestado: any)\n  {\n    try {\n      const docRef = await addDoc(collection(this.afs.firestore,'Encuesta'), {\n        correo: this.user.email,\n        nombreDisplay: this.user.displayName,\n        nombre: encuestado.nombre,\n        apellido:encuestado.apellido,\n        edad: encuestado.edad,\n        numero:encuestado.numero,\n        pregunta1:encuestado.pregunta1,\n        pregunta2:encuestado.pregunta2,\n        pregunta3:encuestado.pregunta3,\n        uid: this.user.uid,\n        fecha: new Date(),\n      });\n      console.log(\"Documento escrito en colección: \", docRef.id);\n      this.user.id=docRef.id;\n    } catch (e) {\n      console.error(\"Error al agregar document: \", e);\n\n    }\n  }\n\n  traerEncuesta(): Observable<Encuestado[]>\n  {\n    let placeRef=collection(this.afs.firestore,\"Encuesta\");\n    return collectionData(placeRef,{idField:'id'}) as Observable<Encuestado[]>;\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}